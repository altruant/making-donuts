{"version":3,"sources":["components/RecipeInfo/index.js","components/Home/index.js","App.js","reportWebVitals.js","index.js"],"names":["RecipeInfo","props","state","recipe_name","image_url","is_public","recipe_type","prep_time","cook_time","cook_temp","temp_format","amount","serving","ingredients","instructions","handleInput","bind","handleSubmit","handleChecked","event","this","setState","target","name","value","preventDefault","fetch","method","headers","body","JSON","stringify","response","json","isDrink","imgSrc","className","type","onChange","placeholder","Fragment","src","alt","style","width","onSubmit","required","whiteSpace","htmlFor","columnGap","flexWrap","cols","rows","React","Component","Home","recipes","data","recipeList","map","recipe","id","to","position","height","overflow","maxWidth","left","top","transform","App","Navbar","Brand","NavItem","Nav","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7a429de.chunk.js","sourcesContent":["import React from 'react'\nimport Cookies from 'js-cookie'\n\n\nclass RecipeInfo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      recipe_name: '',\n      image_url: '',\n      is_public: false,\n      recipe_type: '',\n      prep_time: '',\n      cook_time: '',\n      cook_temp: '',\n      temp_format: 'F',\n      amount: '',\n      serving: '',\n      ingredients: '',\n      instructions: '',\n    }\n    this.handleInput = this.handleInput.bind(this)\n    this.handleSubmit=this.handleSubmit.bind(this)\n    this.handleChecked=this.handleChecked.bind(this)\n\n  }\n\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  handleChecked(event) {\n    this.setState({[event.target.name]: !this.state.is_public})\n\n  }\n\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const response = await fetch('/recipes/', {\n      method: 'POST',\n      headers: {\n        // 'X-CSRFToken': Cookies.get('csrftoken'),\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(this.state)\n    });\n\n    const data = await response.json();\n    // Cookies.set('Authorization', `Token ${data.key}`\n  }\n\n  render() {\n    let isDrink\n    let imgSrc\n    if(this.state.image_url){\n      imgSrc = this.state.image_url\n    } else {\n      imgSrc = 'https://www.macmillandictionary.com/external/slideshow/thumb/Grey_thumb.png'\n    }\n    if(this.state.recipe_type === 'DR') {\n      isDrink = <input className='form-control col-5' type=\"text\" name='cook_temp' value={this.state.cook_temp} onChange={this.handleInput} placeholder='Serving Temp'/>\n    } else {\n      isDrink = <>\n      <input className='form-control col-6 col-md-3 mb-2 mb-md-0' type=\"text\" name='cook_time' value={this.state.cook_time} onChange={this.handleInput} placeholder='Cook Time'/>\n      <input className='form-control col-6 col-md-3' type=\"text\" name='cook_temp' value={this.state.cook_temp} onChange={this.handleInput} placeholder='Cook Temp'/>\n    </>\n    }\n    return(\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"img-container mb-4\">\n            <img src={imgSrc} alt=\"#\" style={{width: '100%'}}/>\n          </div>\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"form-group\">\n              <div className=\"form-group d-md-flex\">\n                <input className='form-control col-12 col-md-6' type=\"text\" name='recipe_name' value={this.state.recipe_name} onChange={this.handleInput} placeholder='Recipe Name' required/>\n                <div className=\"col-12 pt-2 pl-0 pr-0  pt-md-0 pl-md-2 pr-md-2\">\n                  <input className='form-control col-12 col-md-6' type=\"text\" name='by' placeholder='By' required/>\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <input className='form-control' type=\"url\" name='image_url' value={this.state.image_url} onChange={this.handleInput} placeholder='Image URL'/>\n              </div>\n              <div className=\"form-group d-flex\">\n                <div className=\"checkbox col-4 d-flex\">\n                  <input className='col-2 form-control' type=\"checkbox\" name='is_public' onChange={this.handleChecked}/>\n                  <label className='pt-2 col d-flex' style={{whiteSpace: 'nowrap'}} htmlFor=\"is_public\">Public Recipe</label>\n                </div>\n                <select className='form-control col-8' name=\"recipe_type\" onChange={this.handleInput} required>\n                  <option value=\"\">Recipe Type</option>\n                  <option value=\"BR\">Breakfast</option>\n                  <option value=\"BMS\">Breads, Muffins, and Scones</option>\n                  <option value=\"LN\">Lunch</option>\n                  <option value=\"DR\">Drinks</option>\n                  <option value=\"DIN\">Dinner</option>\n                  <option value=\"SD\">Sides</option>\n                  <option value=\"DST\">Dessert</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"form-group d-flex\" style={{columnGap: '15px', flexWrap: 'wrap'}}>\n              <input className='form-control col-6 col-md-3 mb-2 mb-md-0' type=\"text\" name='prep_time' value={this.state.prep_time} onChange={this.handleInput} placeholder='Prep Time'/>\n              {isDrink}\n              <select className='form-control col-3 col-md-2' name=\"temp_format\" onChange={this.handleInput}>\n                <option value=\"F\">°F</option>\n                <option value=\"C\">°C</option>\n              </select>\n            </div>\n            <div className=\"form-group d-flex\">\n              <span className='pt-2 col-3'>This recipe makes:</span>\n              <input className='form-control col-4 col-md-2' type=\"text\" name='amount' value={this.state.amount} onChange={this.handleInput} placeholder='Amount'/>\n              <input className='form-control col-4 col-md-3 ml-2' type=\"text\" name='serving' value={this.state.serving} onChange={this.handleInput} placeholder='Cookies, meals, etc.'/>\n            </div>\n            <div className=\"form-group\">\n              <textarea className='form-control col-12 mb-3' name=\"ingredients\" value={this.state.ingredients} onChange={this.handleInput} placeholder='Ingredients' cols=\"30\" rows=\"6\"></textarea>\n              <textarea className='form-control col-12 mb-4' name=\"instructions\" value={this.state.instructions} onChange={this.handleInput} placeholder='Instructions' cols=\"30\" rows=\"6\"></textarea>\n            </div>\n            <button type='submit' className='btn btn-primary'>Save</button>\n          </form>\n        </div>\n        {/* <h2>Recipes.</h2> */}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default RecipeInfo\n","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n        } from \"react-router-dom\";\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      recipes: []\n    }\n  }\n  async componentDidMount() {\n    const response = await fetch('/recipes/')\n    const data = await response.json()\n    this.setState({recipes: data})\n  }\n  render() {\n    const recipeList = this.state.recipes.map((recipe, id) => {\n      return (\n        <Link to={`/recipes/${recipe.id}`}>\n          <div key={id} className=\"img-container d-inline-flex mr-2\" style={{position: 'relative', width: '200px', height: '200px', overflow: 'hidden'}}>\n            <img src={recipe.image_url} style={{maxWidth:'100%', position: 'absolute', left: '50%', top:'50%', transform: 'translate(-50%,-50%)'}} alt=\"#\"/>\n          </div>\n        </Link>\n      )\n    })\n    return(\n        <React.Fragment>\n          <div className=\"container\">\n            <h2>Home.</h2>\n            <h3>Your Recipes:</h3>\n            {recipeList}\n          </div>\n        </React.Fragment>\n    )\n  }\n}\n\nexport default Home\n","import React from 'react'\nimport RecipeInfo from './components/RecipeInfo'\nimport Home from './components/Home'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n        } from \"react-router-dom\";\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\n\n\nclass App extends React.Component {\n\n  // async handleSubmit(event, info) {\n  //   event.preventdefault();\n  //   const response = await fetch('/recipes/create', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       // 'X-CSRFToken': Cookies.get('csrftoken'),\n  //     },\n  //     body: JSON.stringify(info)\n  //   });\n  //\n  //   const data = await response.json();\n  // }\n  render() {\n    return (\n      <Router>\n        <React.Fragment>\n          <Navbar>\n            <Navbar.Brand>\n              <Link className='mr-2' to='/'>Home</Link>\n            </Navbar.Brand>\n            <Link to='/recipes/create'>\n              <NavItem>Create Recipe</NavItem>\n            </Link>\n            <Nav className='ml-auto'>\n              <NavItem className='mr-2'>Register</NavItem>\n              <NavItem>Login</NavItem>\n            </Nav>\n          </Navbar>\n          <Switch>\n            <Route path='/recipes/create'>\n              <RecipeInfo />\n            </Route>\n            <Route path='/'>\n              <Home />\n            </Route>\n          </Switch>\n        </React.Fragment>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}